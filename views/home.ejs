<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Beautiful ChatGPT Interface</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <style>
        /* General Body Styling */
        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #6e7eeb, #8f90f5);
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            color: #333;
        }

        /* Chat Container Styling */
        .chat-container {
            width: 100%;
            max-width: 850px;
            background: #ffffff;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            height: 80vh;
            animation: fadeIn 0.6s ease-out;
        }

        /* Chat fade-in animation */
        @keyframes fadeIn {
            0% {
                opacity: 0;
            }
            100% {
                opacity: 1;
            }
        }

        /* Messages Section Styling */
        .messages {
            flex: 1;
            padding: 20px;
            overflow-y: auto;
            background-color: #f9fafb;
            border-radius: 20px;
            margin: 10px;
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        /* Message Styling */
        .message {
            max-width: 75%;
            padding: 14px;
            border-radius: 20px;
            font-size: 16px;
            line-height: 1.5;
            word-wrap: break-word;
            opacity: 0;
            animation: messageSlide 0.5s forwards;
        }

        .user-message {
            background-color: #d1e7ff;
            align-self: flex-end;
        }

        .bot-message {
            background-color: #f1f1f1;
            align-self: flex-start;
        }

        /* Animation for message appearance */
        @keyframes messageSlide {
            0% {
                opacity: 0;
                transform: translateY(10px);
            }
            100% {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Input Section Styling */
        .input-container {
            display: flex;
            gap: 15px;
            padding: 18px;
            background-color: #fff;
            border-top: 2px solid #e0e0e0;
            border-radius: 0 0 20px 20px;
            align-items: center;
        }

        .chat-input {
            width: 80%;
            padding: 12px;
            font-size: 16px;
            border: 2px solid #ddd;
            border-radius: 50px;
            outline: none;
            transition: border-color 0.3s ease-in-out;
            box-shadow: 0 0 6px rgba(0, 0, 0, 0.1);
        }

        .chat-input:focus {
            border-color: #4CAF50;
        }

        .send-button {
            width: 15%;
            padding: 12px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 50%;
            font-size: 18px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .send-button:hover {
            background-color: #45a049;
        }

        /* Typing Indicator Styling */
        .typing-indicator {
            font-size: 14px;
            color: #888;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .dots {
            display: inline-block;
            animation: typingDots 1.5s infinite;
        }

        @keyframes typingDots {
            0% { content: ''; }
            33% { content: '.'; }
            66% { content: '..'; }
            100% { content: '...'; }
        }

        /* Mobile Responsiveness */
        @media (max-width: 600px) {
            .chat-container {
                width: 100%;
                height: 95vh;
            }

            .chat-input {
                font-size: 14px;
            }

            .send-button {
                font-size: 16px;
            }
        }
    </style>
</head>
<body>

<div class="chat-container">
    <div class="messages" id="messages">
        <!-- Messages will be displayed here -->
    </div>

    <div class="input-container">
        <input type="text" id="userInput" class="chat-input" placeholder="Type your message..." onkeydown="if(event.key === 'Enter') sendMessage()">
        <button class="send-button" onclick="sendMessage()">&#10148;</button>
    </div>
</div>
<script>
    function sendMessage() {
        const userInput = document.getElementById('userInput');
        const messageText = userInput.value.trim();
        
        if (messageText === '') {
            return; 
        }
        displayMessage(messageText, 'user');
        fetch('/data', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ question: messageText })
        })
        .then(response => response.json())
        .then(data => {
            displayMessage(data.response, 'bot');
        })
        .catch(error => {
            console.error("Error:", error);
            displayMessage("Sorry, something went wrong. Please try again.", 'bot');
        });
        userInput.value = '';
        userInput.focus();
    }
    function displayMessage(message, sender) {
        const messagesContainer = document.getElementById('messages');

        const messageDiv = document.createElement('div');
        messageDiv.classList.add('message');
        
        if (sender === 'user') {
            messageDiv.classList.add('user-message');
        } else {
            messageDiv.classList.add('bot-message');
        }

        messageDiv.textContent = message;
        messagesContainer.appendChild(messageDiv);
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }
</script>

</body>
</html>
